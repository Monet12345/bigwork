version: '3.8'

# 需要的环境变量
# MYSQL_ROOT_PASSWORD   - mysql的root密码
# MYSQL_DATABASE        - mysql的数据库
# MYSQL_USER            - mysql的用户名
# MYSQL_PASSWORD        - mysql的密码
# MYSQL_HOST            - mysql的ip

services:
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data  # 持久化 Redis 数据
    networks:
      - app-network

  mysql:
    image: mysql:8.0  # 使用 MySQL 8.0 镜像
    container_name: mysql
    ports:
      - "3307:3306"  # 将容器的 3306 端口映射到主机的 3306 端口
    environment:
      MYSQL_ROOT_PASSWORD:          ${MYSQL_ROOT_PASSWORD}      # 设置 MySQL root 用户的密码
      MYSQL_DATABASE:               ${MYSQL_DATABASE}           # 创建一个默认数据库
      MYSQL_USER:                   ${MYSQL_USER}               # 创建一个新用户
      MYSQL_PASSWORD:               ${MYSQL_PASSWORD}           # 设置新用户的密码
    volumes:
      - mysql_data:/var/lib/mysql  # 持久化 MySQL 数据
    networks:
      - app-network

  app1:
    image: monet12345/bigwork_meta:meta
    container_name: bigwork_meta_app
    ports:
      - "8082:8082"
      - "8084:8084"
    environment:
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: "6379"
      SPRING_DATASOURCE_URL:            jdbc:mysql://${MYSQL_HOST}:3307/${MYSQL_DATABASE}      # 使用 MySQL 服务
      SPRING_DATASOURCE_USERNAME:       ${MYSQL_USER}                                           # MySQL 用户名
      SPRING_DATASOURCE_PASSWORD:       ${MYSQL_PASSWORD}                                       # MySQL 密码
    depends_on:
      - redis
      - mysql
    networks:
      - app-network

  app2:
    image: monet12345/bigwork_apitest:apitest
    container_name: bigwork_apitest_app
    ports:
      - "8083:8083"
    environment:
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: "6379"
      SPRING_DATASOURCE_URL:        jdbc:mysql://${MYSQL_HOST}:3307/${MYSQL_DATABASE}      # 使用 MySQL 服务
      SPRING_DATASOURCE_USERNAME:   ${MYSQL_USER}                                           # MySQL 用户名
      SPRING_DATASOURCE_PASSWORD:   ${MYSQL_PASSWORD}                                       # MySQL 密码
    depends_on:
      - redis
      - mysql
    networks:
      - app-network

volumes:
  redis_data:
  mysql_data:  # MySQL 数据持久化卷

networks:
  app-network:
    driver: bridge