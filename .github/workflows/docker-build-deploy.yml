name: Docker Build and Deploy

on:
  push:
    branches:
      - iteration/*  # 只在 iteration/* 分支的 push 事件触发

jobs:
  build-and-push:
    runs-on: ubuntu-latest  # 使用 GitHub 托管的 Ubuntu 运行器
    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # 拉取代码

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'  # 设置 Java 17 环境

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-Linux-${{ hashFiles('**/pom.xml') }}  # 基于 pom.xml 的哈希值
          restore-keys: |
            maven-Linux-  # 通用缓存键

      - name: Build with Maven
        run: |
          ls -R  # 打印目录结构，检查路径
          cd bigwork_starter && mvn clean install -e -X  # 启用详细日志
          cd ../bigwork_meta && mvn clean package -e -X
          cd ../bigwork_apitest && mvn clean package -e -X

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}  # Docker Hub 用户名
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}  # Docker Hub 密码

      - name: Build and push bigwork_meta image
        uses: docker/build-push-action@v2
        with:
          context: ./bigwork_meta  # Docker 构建上下文
          push: true  # 推送镜像到 Docker Hub
          tags: monet12345/bigwork_meta:meta  # 镜像标签

      - name: Build and push bigwork_apitest image
        uses: docker/build-push-action@v2
        with:
          context: ./bigwork_apitest  # Docker 构建上下文
          push: true  # 推送镜像到 Docker Hub
          tags: monet12345/bigwork_apitest:apitest  # 镜像标签

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push  # 依赖 build-and-push 任务
    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # 拉取代码

      - name: Extract branch name
        id: extract-branch
        run: |
          # 从 GITHUB_REF 中提取分支名称
          BRANCH_NAME=$(echo $GITHUB_REF | sed 's/refs\/heads\///')
          echo "Extracted branch name: $BRANCH_NAME"
          echo "::set-output name=branch_name::$BRANCH_NAME"


      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd bigwork/bigwork
            echo "Current directory: $(pwd)"
            echo "Checking out branch: ${{ steps.extract-branch.outputs.branch_name }}"
            git fetch origin
            git reset --hard  # 强制清除本地更改
            git checkout ${{ steps.extract-branch.outputs.branch_name }}
            git pull origin ${{ steps.extract-branch.outputs.branch_name }}
            echo "Stopping and removing existing containers..."
            docker-compose down --remove-orphans  # 删除所有容器
            echo "Pulling latest images..."
            docker-compose pull
            echo "Building Docker images..."
            docker-compose build
            echo "Starting containers..."
            docker-compose up -d
            echo "Viewing logs..."
            docker-compose logs -f